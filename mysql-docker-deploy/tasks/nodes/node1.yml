---

- name: Stop all containers of the same name mysqlmanager
  docker_container:
    state: absent
    name: "mysqlmanager"

- name: Create a directory if it does not exist
  file:
    path: /vagrant/mysql/data
    state: directory
    mode: '0755'
    
- name: Create a MySQL network
  docker_network:
    name: mysql_cluster_network
    ipam_config:
      - subnet: 192.168.0.0/16

- name: Start the container MySQL Management Node
  docker_container:
    state: started
    name: "mysqlmanager"
    image: "mysql/mysql-cluster"
    networks_cli_compatible: yes
    network_mode: mysql_cluster_network
    # networks: 
    #   - ipv4_address: "192.168.0.2"
    volumes:
      - /vagrant/mysql/data:/data
    command: "ndb_mgmd"
    container_default_behavior: no_defaults
    
    
###################################
# Check install docker deployments #
###################################

# show container with restarting mode
- name: Verify if containers is up mysqlmanager
  shell: "docker ps -aq --filter name=mysqlmanager --filter status=restarting --filter status=exited --latest | wc -l"
  register: container_run_count

# Check if docker deployment is OK
- name: "Check if docker deployment is OK"
  debug:
    msg: "Container mysqlmanager is OK"
  when:  container_run_count.stdout == "0"  

# Check if docker deployment is KO
- name: Check if docker deployment is KO
  fail: 
    msg: "Containermysqlmanager is KO"
  when: container_run_count.stdout == "1"
 

    