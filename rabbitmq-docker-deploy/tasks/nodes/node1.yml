---

- name: Stop all containers of the same name rabbit1@testvm
  docker_container:
    state: absent
    name: "rabbitmq1"

- name: Create a directory if it does not exist
  file:
    path: /vagrant/rabbitmq/conf
    state: directory
    mode: '0755'
    

# - name: Create a rabbitmq network
#   docker_network:
#     name: rabbitmq_network       

- name: Start the container rabbit1@testvm
  docker_container:
    state: started
    name: "rabbitmq1"
    image: "rabbitmq:3"
    env: 
      RABBITMQ_ERLANG_COOKIE: 'UoNOcDhfxW9uoZ92wh6BjA=='
    hostname: testvm
    network_mode: host
    volumes:
      - /vagrant/rabbitmq/conf:/data
    # command: "redis-server --appendonly yes"
    container_default_behavior: no_defaults
    #published_ports: "{{ docker_container_mapped_port | default(omit) }}"

# - name: Copy cookie
#   shell: "docker cp rabbitmq1:/var/lib/rabbitmq/.erlang.cookie /data/.erlang.cookie"


# - name: Copy erlang cookie file
#   copy:
#     remote_src: yes
#     src: "/var/lib/rabbitmq/.erlang.cookie"
#     dest: "/vagrant/rabbitmq/conf/.erlang.cookie"
#     owner: vagrant
#     group: vagrant
#     mode: '0644'


    
###################################
# Check install docker deployments #
###################################

# show container with restarting mode
- name: Verify if containers is up rabbit1@testvm
  shell: "docker ps -aq --filter name=rabbitmq1 --filter status=restarting --filter status=exited --latest | wc -l"
  register: container_run_count

# Check if docker deployment is OK
- name: "Check if docker deployment is OK"
  debug:
    msg: "Container rabbit1mq is OK"
  when:  container_run_count.stdout == "0"  

# Check if docker deployment is KO
- name: Check if docker deployment is KO
  fail: 
    msg: "Container rabbitmq1 is KO"
  when: container_run_count.stdout == "1"
 

    