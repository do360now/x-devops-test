---

- name: Stop all containers of the same name redis_slave1
  docker_container:
    state: absent
    name: "redis_slave1"

- name: Create a directory if it does not exist
  file:
    path: /home/vagrant/conf/7004
    state: directory
    mode: '0755'

- name: Copy Redis config file
  copy:
    remote_src: no
    src: "7004/redis.conf"
    dest: "/home/vagrant/conf/7004/redis.conf"
    owner: vagrant
    group: vagrant
    mode: '0644'
    

- name: Start the container redis_slave1
  docker_container:
    state: started
    name: "redis_slave1"
    image: "redis"
    network_mode: host
    volumes:
      - /home/vagrant/conf/7004:/data
    command: "redis-server /data/redis.conf"
    #published_ports: "{{ docker_container_mapped_port | default(omit) }}"
    

###################################
# Check install docker deployments #
###################################

# show container with restarting mode
- name: Verify if containers is up redis_slave1
  shell: "docker ps -aq --filter name=redis_slave1 --filter status=restarting --filter status=exited --latest | wc -l"
  register: container_run_count

# Check if docker deployment is OK
- name: "Check if docker deployment is OK"
  debug:
    msg: "Container redis_slave1 is OK"
  when:  container_run_count.stdout == "0"  

# Check if docker deployment is KO
- name: Check if docker deployment is KO
  fail: 
    msg: "Container redis_slave1 is KO"
  when: container_run_count.stdout == "1"